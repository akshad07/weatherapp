version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    depends_on:
      - db
      - redis
    env_file:
      - .env
    command: ["sh", "-c", "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:7500"]

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A weather worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - web
      - redis
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A weather beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - web
      - redis
    env_file:
      - .env

  db:
    image: postgis/postgis:15-3.3
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis: 
    image: redis:7-alpine
    ports:
      - "6666:6379"
    volumes:
      - redis_data:/data
    restart: always

volumes:
  static_volume:
  postgres_data:
  redis_data:
